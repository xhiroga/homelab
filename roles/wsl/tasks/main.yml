---
# https://learn.microsoft.com/ja-jp/windows/wsl/wsl-config
# After copying wsl.conf, you need to restart WSL.
- name: Copy wsl.conf
  copy:
    src: etc/wsl.conf
    dest: /etc/wsl.conf
    owner: root
    group: root
    mode: '0644'
  become: true

- name: Install zsh
  ansible.builtin.apt:
    name:
      - zsh
    state: present
  become: true

- name: Set shell for user
  become: true
  user:
    name: "{{ ansible_user_id }}"
    shell: /usr/bin/zsh

- name: Install build-essential
  ansible.builtin.apt:
    name:
      - build-essential
    state: present
  become: true

- name: Install pkg-config, libxml2 and libxml2-dev
  ansible.builtin.apt:
    name:
      - pkg-config
      - cmake
      # LIBXML2
      - libxml2
      - libxml2-dev
      # freetype2
      - libfreetype6
      - libfreetype6-dev
      # FONTCONFIG
      - fontconfig
      - libfontconfig1-dev
      # ANT
      - ant
      # Development tools
      - clang
      - git-lfs
      - openssh-server
      - nmap
      - nfs-common
      - ffmpeg
      # OpenGL ES, Vulkan
      - libegl1-mesa-dev
      - mesa-utils
      # OpenSSL
      - libssl-dev
      - pkg-config
      # tauri
      - libgtk-3-dev
      - libjavascriptcoregtk-4.0-dev
      - libsoup2.4-dev
      - libwebkit2gtk-4.0-dev
    state: present
  become: true

- name: Generate SSH host keys
  command: ssh-keygen -A

- name: Copy sshd_config
  copy:
    src: etc/ssh/sshd_config
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: '0644'
  become: true

- name: Ensure .ssh directory exists
  file:
    path: "~/.ssh"
    state: directory
    mode: '0700'

- name: Fetch GitHub public keys
  uri:
    url: "{{ github_keys_url }}"
    return_content: true
  register: github_keys

- name: Set authorized_keys with GitHub keys only
  copy:
    content: "{{ github_keys.content }}"
    dest: "~/.ssh/authorized_keys"
    mode: '0600'

- name: Enable and start openssh-server
  systemd:
    name: ssh
    state: started
    enabled: true

- name: Add ppa:deadsnakes/ppa
  ansible.builtin.apt_repository:
    repo: ppa:deadsnakes/ppa
  become: true

- name: Install Python
  ansible.builtin.apt:
    name:
      - python3.8
      - python3.8-venv
      - python3.9
      - python3.9-venv
      - python3.10
      - python3.10-venv
    state: present
  become: true

- name: Download CUDA keyring DEB
  ansible.builtin.get_url:
    url: "https://developer.download.nvidia.com/compute/cuda/repos/wsl-ubuntu/x86_64/cuda-keyring_1.1-1_all.deb"
    dest: "/tmp/cuda-keyring_1.1-1_all.deb"
    mode: '0644'
  become: true

- name: Install CUDA keyring
  ansible.builtin.apt:
    deb: "/tmp/cuda-keyring_1.1-1_all.deb"
    state: present
  become: true

- name: Update apt cache after adding CUDA keyring
  ansible.builtin.apt:
    update_cache: yes
  become: true

- name: Install CUDA Toolkit 12.4
  ansible.builtin.apt:
    name: cuda-toolkit-12-4
    state: present

- name: Install CUDA Toolkit 12.6
  ansible.builtin.apt:
    name: cuda-toolkit-12-6
    state: present

# 若干冗長なので、後でリファクタリングする。
- name: Add oibaf PPA for latest Mesa drivers
  ansible.builtin.apt_repository:
    repo: ppa:oibaf/graphics-drivers
    state: present
  become: true

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes
  become: true

- name: Upgrade all packages
  ansible.builtin.apt:
    upgrade: dist
  become: true

- name: Install from Brewfile
  ansible.builtin.shell: brew bundle --file={{ item }}
  with_items:
    - "{{ homebrew_brewfile_dir }}/Brewfile"

# TODO: ボリュームをマウントする。
# https://claude.ai/chat/9e9cfd8e-925e-4c82-86d6-f731beb36c41
