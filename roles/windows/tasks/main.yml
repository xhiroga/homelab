---
# tasks file for windows

- name: Modify Windows Registry Keys
  ansible.windows.win_regedit:
    key: "{{ item.key }}"
    value: "{{ item.value }}"
    data: "{{ item.data }}"
    datatype: "{{ item.datatype }}"
  loop:
    # Enable Clipboard History
    - key: HKCU:\SOFTWARE\Microsoft\Clipboard
      value: EnableClipboardHistory
      data: 1
      datatype: dword

    # Show Hidden Files
    - key: HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced
      value: Hidden
      data: 1
      datatype: dword

    # Disable "Hide File Extensions"
    - key: HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced
      value: HideFileExt
      data: 0
      datatype: dword

    # Enable Developer Mode
    - key: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock
      value: AllowDevelopmentWithoutDevLicense
      data: 1
      datatype: dword

    # Enable Sudo Functionality (custom configuration)
    - key: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Sudo
      value: Enabled
      data: 1
      datatype: dword

    # Ensure "Show Frequent Items" is disabled
    - key: HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\ShowFrequent
      value: HideFileExt
      data: 0
      datatype: dword

    # Ensure "Show Recent Items" is disabled
    - key: HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\ShowRecent
      value: HideFileExt
      data: 0
      datatype: dword

    # Enable Long Path Support
    - key: HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem
      value: LongPathEnabled
      data: 1
      datatype: dword

# TODO: Future Improvements
# - Hide Taskbar Widgets and Task View
# - Disable Window Snap features
# - Additional optimizations from:
#   https://qiita.com/Oscer/items/132a8153cc5dcf0fad47

- name: Copy .gitconfig template to user home
  ansible.builtin.template:
    src: .gitconfig.j2
    dest: "~/.gitconfig"
    mode: '0644'

- name: List installed winget packages
  ansible.windows.win_shell: |
    Invoke-Expression "& '$(Join-Path (Get-AppxPackage Microsoft.DesktopAppInstaller).InstallLocation "winget.exe")' list"
  register: winget_list

- name: Install required packages using winget
  ansible.windows.win_shell: |
    Invoke-Expression "& '$(Join-Path (Get-AppxPackage Microsoft.DesktopAppInstaller).InstallLocation "winget.exe")' install {{ item }}"
  loop: "{{ winget_packages }}"
  when: item not in winget_list.stdout

- name: Ensure user-specific PATH variables
  ansible.windows.win_path:
    elements: "{{ win_path_user_elements }}"
    name: 'Path'
    scope: user

- name: Ensure system-wide PATH variables
  ansible.windows.win_path:
    elements: "{{ win_path_machine_elements }}"
    name: 'Path'
    scope: machine
