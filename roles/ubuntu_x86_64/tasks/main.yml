---
# Check if we need sudo for apt operations
- name: Check if sudo is needed for apt
  ansible.builtin.command: apt-get update --dry-run
  register: apt_check
  failed_when: false
  changed_when: false

- name: Set apt privilege requirement
  ansible.builtin.set_fact:
    apt_needs_sudo: "{{ apt_check.rc != 0 }}"

# The default Python may not be compatible with `python3-apt`.
# Specifically, in RunPod, when a specific Python version (e.g., 3.11) is installed and provided for Ubuntu 22.04, `python3-apt` is only accessible from python3.10.
# Since this Playbook is referenced dynamically, `ansible_python_interpreter` also needs to be specified dynamically.
- name: Bootstrap python3-apt and find compatible Python interpreter
  ansible.builtin.raw: |
    # Ensure python3-apt is installed
    export DEBIAN_FRONTEND=noninteractive
    {% if apt_needs_sudo %}sudo {% endif %}apt-get update -qq
    {% if apt_needs_sudo %}sudo {% endif %}apt-get install -y python3-apt
    
    # Find all Python 3 interpreters (python3 comes first naturally)
    PYTHON_INTERPRETERS=$(find /usr/bin -name "python3*" -type f -executable | sort)
    
    # Test each Python interpreter to find one that can import apt_pkg
    WORKING_PYTHON="/usr/bin/python3"
    for python_bin in $PYTHON_INTERPRETERS; do
      if $python_bin -c "import apt_pkg" 2>/dev/null; then
        WORKING_PYTHON="$python_bin"
        break
      fi
    done
    
    echo "DETECTED_PYTHON=$WORKING_PYTHON"
  register: python_detection
  changed_when: false

- name: Set ansible_python_interpreter to compatible Python
  ansible.builtin.set_fact:
    ansible_python_interpreter: "{{ python_detection.stdout_lines | select('match', '^DETECTED_PYTHON=') | first | regex_replace('^DETECTED_PYTHON=', '') }}"

- name: Gather facts with correct Python interpreter
  ansible.builtin.setup:

- name: Install Homebrew
  ansible.builtin.shell: NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

- name: Add Homebrew shellenv to root's .bashrc
  ansible.builtin.lineinfile:
    path: ~/.bashrc
    line: 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"'
    state: present

- name: apt-get update
  ansible.builtin.apt:
    update_cache: yes
  become: "{{ apt_needs_sudo }}"

# https://github.com/pytorch/pytorch/blob/main/Dockerfile を参考に、pkg-configのみ追加
- name: Install dev-base
  ansible.builtin.apt:
    name:
      - build-essential
      - ca-certificates
      - ccache
      - cmake
      - curl
      - git
      - libjpeg-dev
      - libpng-dev
      - pkg-config
    state: present
  become: "{{ apt_needs_sudo }}"

- name: Install Utilities from apt
  ansible.builtin.apt:
    name:
      - git-lfs
      - python3-dev
      - rsync
      - tmux
    state: present
  become: "{{ apt_needs_sudo }}"

- name: Install Utilities from Homebrew
  community.general.homebrew:
    name:
      - cloudflared
      - node  # nodejs in apt is too old...
      - uv
    state: present
